{
  "id" : "c31454a4-cbd9-4753-878e-2fabb545ca95",
  "name" : "api_conferences_dvbe18_rooms_room8_thursday",
  "request" : {
    "url" : "/api/conferences/dvbe18/rooms/Room8/thursday",
    "method" : "GET"
  },
  "response" : {
    "status" : 200,
    "body" : "{\"slots\":[{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542270600000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Architecture & Security\",\"talkType\":\"Conference\",\"track\":\"Architecture & Security.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>You've seen big data breaches in the news. But as a developer who doesn't specialize in security you might find it hard to protect yourself from becoming the next victim. In this talk, you'll learn the most common reasons that some systems get hacked and what practical measures you can take as a developer to keep your apps safe.</p>\\n\",\"id\":\"SOK-9080\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/ff24d00a2dc5b5dd2700c009eb2aa82587667101\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Joe Kutner\"},\"name\":\"Joe Kutner\"}],\"title\":\"10 Mistakes Hackers Want You to Make\",\"lang\":\"en\",\"summary\":\"You've seen big data breaches in the news. But as a developer who doesn't specialize in security you might find it hard to protect yourself from becoming the next victim. In this talk, you'll learn the most common reasons that some systems get hacked and what practical measures you can take as a developer to keep your apps safe.\"},\"fromTime\":\"09:30\",\"toTimeMillis\":1542273600000,\"toTime\":\"10:20\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"conf_Room8_thursday_15_9h30_10h20\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542274800000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Java Language\",\"talkType\":\"Conference\",\"track\":\"Java Language.label\",\"audienceLevel\":\"l2\",\"summaryAsHtml\":\"<p>In September 2017 the long-awaited release of Java 9 gave us a new module system in Java. It also kick-started the release-train of frequent Java releases, with Java 11 being the first long-term supported Java version poised to take modules into the mainstream. So what has happened since the introduction of the module system?</p>\\n<p>This talk will provide an overview adoption of modules in open-source libraries, IDEs, build tools, and so on. It will also feature tools that have emerged to make working with modules easier. Expect an honest overview of the current state of modules in Java, with lots of demos to show what's possible. After this talk you can start developing your own modular Java application without hesitation!</p>\\n\",\"id\":\"URM-8627\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/202cc3276e3b7e3918623609feeef4d25d79a3ec\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Sander Mak\"},\"name\":\"Sander Mak\"}],\"title\":\"Java Modularity: the Year After\",\"lang\":\"en\",\"summary\":\"In September 2017 the long-awaited release of Java 9 gave us a new module system in Java. It also kick-started the release-train of frequent Java releases, with Java 11 being the first long-term supported Java version poised to take modules into the mainstream. So what has happened since the introduction of the module system?\\r\\n\\r\\nThis talk will provide an overview adoption of modules in open-source libraries, IDEs, build tools, and so on. It will also feature tools that have emerged to make working with modules easier. Expect an honest overview of the current state of modules in Java, with lots of demos to show what's possible. After this talk you can start developing your own modular Java application without hesitation!\"},\"fromTime\":\"10:40\",\"toTimeMillis\":1542277800000,\"toTime\":\"11:30\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"conf_Room8_thursday_15_10h40_11h30\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542279000000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Architecture & Security\",\"talkType\":\"Conference\",\"track\":\"Architecture & Security.label\",\"audienceLevel\":\"l3\",\"summaryAsHtml\":\"<p>Most APIs built today are considered REST APIs these days, when in fact they merely exchange data via HTTP and JSON. At the same time, systems almost never act autonomously but rather live alongside others. In that context, being able to evolve an API becomes a crucial aspect in its design and the only knee-jerk, but often problematic reaction usually is: versioning.</p>\\n<p>The talk takes a step back and looks at the architectural context APIs live in and outlines the drawbacks that result from ignoring crucial parts of REST. It discusses internal VS. external APIs, whether that distinction is useful in the first place, the impact of Domain-Driven Design and how to design and specify APIs and their clients to optimize for evolvability so that changes in an API don’t break clients.</p>\\n\",\"id\":\"JEV-7759\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/7c3e49bf489644eeefdd3d85100b474c28c41086\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Oliver Gierke\"},\"name\":\"Oliver Gierke\"}],\"title\":\"REST beyond the obvious  - API design for ever evolving systems\",\"lang\":\"en\",\"summary\":\"Most APIs built today are considered REST APIs these days, when in fact they merely exchange data via HTTP and JSON. At the same time, systems almost never act autonomously but rather live alongside others. In that context, being able to evolve an API becomes a crucial aspect in its design and the only knee-jerk, but often problematic reaction usually is: versioning.\\r\\n\\r\\nThe talk takes a step back and looks at the architectural context APIs live in and outlines the drawbacks that result from ignoring crucial parts of REST. It discusses internal VS. external APIs, whether that distinction is useful in the first place, the impact of Domain-Driven Design and how to design and specify APIs and their clients to optimize for evolvability so that changes in an API don’t break clients.\"},\"fromTime\":\"11:50\",\"toTimeMillis\":1542282000000,\"toTime\":\"12:40\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"conf_Room8_thursday_15_11h50_12h40\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542282900000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Methodology & Culture\",\"talkType\":\"Quickie\",\"track\":\"Methodology & Culture.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>Do you ever find yourself being \\\"just another coding machine\\\"? Pre-written user stories, pizzas and fizzy drinks in, code out - but the truth is that every single one of us has so much more to offer than this. Escaping this mentality, and bringing our full set of talents and creativity to the table, can make a great impact, be immensely fulfilling, and really launch us to new possibilities in our careers.</p>\\n<p>There are also very real opportunities and threats in the modern job market - if all we offer is code, then there are ever more people who will do this for less and less money. We need to get ahead of the game, and go beyond this minimum, or risk obsolescence.</p>\\n<p>This will mean going outside your comfort zone, and thinking differently - but the pay-off can be huge! I want to share some my experiences from making this transition, and some ideas for how to make the first steps in breaking down the preconceptions and barriers, and starting the journey.</p>\\n\",\"id\":\"FEF-2774\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/dc8c4ba353342825dca80416b1e9176f24c7898c\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Richard Wellum\"},\"name\":\"Richard Wellum\"}],\"title\":\"Programmers: Be more than your code!\",\"lang\":\"en\",\"summary\":\"Do you ever find yourself being \\\"just another coding machine\\\"? Pre-written user stories, pizzas and fizzy drinks in, code out - but the truth is that every single one of us has so much more to offer than this. Escaping this mentality, and bringing our full set of talents and creativity to the table, can make a great impact, be immensely fulfilling, and really launch us to new possibilities in our careers.\\r\\n\\r\\nThere are also very real opportunities and threats in the modern job market - if all we offer is code, then there are ever more people who will do this for less and less money. We need to get ahead of the game, and go beyond this minimum, or risk obsolescence.\\r\\n\\r\\nThis will mean going outside your comfort zone, and thinking differently - but the pay-off can be huge! I want to share some my experiences from making this transition, and some ideas for how to make the first steps in breaking down the preconceptions and barriers, and starting the journey. \"},\"fromTime\":\"12:55\",\"toTimeMillis\":1542283800000,\"toTime\":\"13:10\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"quick_Room8_thursday_15_12h55_13h10\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542284400000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Methodology & Culture\",\"talkType\":\"Quickie\",\"track\":\"Methodology & Culture.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>As developers we are committed to a life of learning. With all the new technologies and paradigms changing so fast, more conferences and meetups than you can attend, other people doing cool stuff, you can feel overwhelmed and have a fear of missing out. You are not alone! We'll dive into what motivates us and walk through ways of dealing with this and give direction to expanding our knowledge and skills.</p>\\n\",\"id\":\"YNH-3520\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/2915ce1f84a7b90a7eec6fdf5cb209ccad724e48\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Tom Wetjens\"},\"name\":\"Tom Wetjens\"}],\"title\":\"4 Ways to deal with Fear Of Missing Out\",\"lang\":\"en\",\"summary\":\"As developers we are committed to a life of learning. With all the new technologies and paradigms changing so fast, more conferences and meetups than you can attend, other people doing cool stuff, you can feel overwhelmed and have a fear of missing out. You are not alone! We'll dive into what motivates us and walk through ways of dealing with this and give direction to expanding our knowledge and skills.\"},\"fromTime\":\"13:20\",\"toTimeMillis\":1542285300000,\"toTime\":\"13:35\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"quick_Room8_thursday_15_13h20_13h35\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542286200000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Server Side Java\",\"talkType\":\"Conference\",\"track\":\"Server Side Java.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>Reactive programming offers Java developers a way to build message-driven, elastic, resilient, and responsive services…​yet many Java developers don’t know where to begin. The Reactive Streams initiative provides a baseline and Project Reactor provides a great way to become immediately productive, leveraging reactive capabilities from end to end. Whether you’re coming from a Spring MVC environment or a functional perspective, Reactor empowers you to spin up fully reactive Spring Boot 2 applications quickly and efficiently.</p>\\n<p>In this talk, the presenter dives into the net-new Netty-based web runtime and shows you how to:</p>\\n<ul>\\n<li>integrate easily with existing Spring-stack technologies</li>\\n<li>easily transition from blocking to reactive applications &amp; systems</li>\\n<li>define your API in an imperative style and functionally, reaping all benefits both ways</li>\\n<li>leverage powerful new testing mechanisms to make code better and life easier</li>\\n</ul>\\n<p>The presenter will code all examples live and in real time. This is not an abstract discussion, come to gain real, practical knowledge!</p>\\n\",\"id\":\"LPH-4584\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/518923203253fdad79de57c07b162f72338b6397\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Mark Heckler\"},\"name\":\"Mark Heckler\"}],\"title\":\"Full-stack Reactive Java with Project Reactor & Spring Boot 2\",\"lang\":\"en\",\"summary\":\"Reactive programming offers Java developers a way to build message-driven, elastic, resilient, and responsive services…​yet many Java developers don’t know where to begin. The Reactive Streams initiative provides a baseline and Project Reactor provides a great way to become immediately productive, leveraging reactive capabilities from end to end. Whether you’re coming from a Spring MVC environment or a functional perspective, Reactor empowers you to spin up fully reactive Spring Boot 2 applications quickly and efficiently.\\r\\n\\r\\nIn this talk, the presenter dives into the net-new Netty-based web runtime and shows you how to:\\r\\n\\r\\n* integrate easily with existing Spring-stack technologies\\r\\n* easily transition from blocking to reactive applications & systems\\r\\n* define your API in an imperative style and functionally, reaping all benefits both ways\\r\\n* leverage powerful new testing mechanisms to make code better and life easier\\r\\n\\r\\nThe presenter will code all examples live and in real time. This is not an abstract discussion, come to gain real, practical knowledge!\"},\"fromTime\":\"13:50\",\"toTimeMillis\":1542289200000,\"toTime\":\"14:40\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"conf_Room8_thursday_15_13h50_14h40\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542290400000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Programming languages\",\"talkType\":\"Conference\",\"track\":\"Programming languages.label\",\"audienceLevel\":\"l2\",\"summaryAsHtml\":\"<p>Most of the Java applications are written in Java 8 nowadays and people are looking around to upgrade to Java 11 or even migrating to Kotlin.  Both are promoted as the new way to go and both have their own strengths. Upgrading to Java 11 might be an obvious next safe step to do and probably the most used frameworks will be Java 11 compliant soon. But what if you could migrate to Kotlin with the same effort? This would bring you additional advantages like: data class, very concise list manipulations, extension functions and even more to get you’re code more readable and maintainable.\\nConsidering the Kotlin migration, the first questions that pop up are: What are the wise steps to take and where to start? Some experiences and thoughts answering these questions will be shared during this live coding session.</p>\\n\",\"id\":\"ZQM-8903\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/d7fcff19b53bb354133bdc88eb77b720b39a5cbf\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Paulien van Alst\"},\"name\":\"Paulien van Alst\"}],\"title\":\"From Java to Kotlin: the adventures of a smooth migration\",\"lang\":\"en\",\"summary\":\"Most of the Java applications are written in Java 8 nowadays and people are looking around to upgrade to Java 11 or even migrating to Kotlin.  Both are promoted as the new way to go and both have their own strengths. Upgrading to Java 11 might be an obvious next safe step to do and probably the most used frameworks will be Java 11 compliant soon. But what if you could migrate to Kotlin with the same effort? This would bring you additional advantages like: data class, very concise list manipulations, extension functions and even more to get you’re code more readable and maintainable.\\r\\nConsidering the Kotlin migration, the first questions that pop up are: What are the wise steps to take and where to start? Some experiences and thoughts answering these questions will be shared during this live coding session.\"},\"fromTime\":\"15:00\",\"toTimeMillis\":1542293400000,\"toTime\":\"15:50\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"conf_Room8_thursday_15_15h0_15h50\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542295800000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Methodology & Culture\",\"talkType\":\"Conference\",\"track\":\"Methodology & Culture.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>Any country that has \\\"Democratic\\\" in its official name ISN'T democratic. Any organisation that tells you that it is \\\"doing Agile\\\" ISN'T doing Agile. I noticed the first as I was growing up during the Cold War. The second truth I've discovered in the last few years working as a consultant for ThoughtWorks.</p>\\n<p>How do you teach Agile to a group of people who think they are already doing Agile? How do you explain to a business that thinks that \\\"Agile doesn't work\\\" that the reason why it isn't working is because IT has to change as well as the technology group? How do you even begin to do this when everybody you meet thinks that they've \\\"tried this all before, it just doesn't work here!\\\"</p>\\n<p>We've worked under these conditions and we've had success in effecting real change both at ground level and throughout the wider business. In this talk I'll share some techniques that we've successfully used.</p>\\n\",\"id\":\"HGA-5787\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/6abf170c2f14b452300d5b52df6818afcb6fcccf\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"James Birnie\"},\"name\":\"James Birnie\"}],\"title\":\"Agile is a Dirty Word\",\"lang\":\"en\",\"summary\":\"Any country that has \\\"Democratic\\\" in its official name ISN'T democratic. Any organisation that tells you that it is \\\"doing Agile\\\" ISN'T doing Agile. I noticed the first as I was growing up during the Cold War. The second truth I've discovered in the last few years working as a consultant for ThoughtWorks.\\r\\n\\r\\nHow do you teach Agile to a group of people who think they are already doing Agile? How do you explain to a business that thinks that \\\"Agile doesn't work\\\" that the reason why it isn't working is because IT has to change as well as the technology group? How do you even begin to do this when everybody you meet thinks that they've \\\"tried this all before, it just doesn't work here!\\\"\\r\\n\\r\\nWe've worked under these conditions and we've had success in effecting real change both at ground level and throughout the wider business. In this talk I'll share some techniques that we've successfully used.\"},\"fromTime\":\"16:30\",\"toTimeMillis\":1542298800000,\"toTime\":\"17:20\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"conf_Room8_thursday_15_16h30_17h20\",\"day\":\"thursday\"},{\"roomId\":\"Room8\",\"notAllocated\":false,\"fromTimeMillis\":1542300000000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Java Language\",\"talkType\":\"Conference\",\"track\":\"Java Language.label\",\"audienceLevel\":\"l3\",\"summaryAsHtml\":\"<p>When Java 8 was first introduced, it revolutionized the way Java applications were written by providing the core constructs for asynchronous programming and handling data streams. With Java 9, 10, and 11, these capabilities were extended to the level that allows us to write truly modern, reactive applications with the JDK.</p>\\n<p>In this live-coding session, we explore JDK 9-11 features enabling all the aspects of reactive programming - updates to the Stream and CompletableFuture APIs, Reactive Streams publish-subscribe framework, HTTP/2 client, and more.</p>\\n\",\"id\":\"YZA-8319\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/a8a78c50598038f7e98f0361822304bc7c858746\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Miro Cupak\"},\"name\":\"Miro Cupak\"}],\"title\":\"Exploring reactive programming in Java\",\"lang\":\"en\",\"summary\":\"When Java 8 was first introduced, it revolutionized the way Java applications were written by providing the core constructs for asynchronous programming and handling data streams. With Java 9, 10, and 11, these capabilities were extended to the level that allows us to write truly modern, reactive applications with the JDK.\\r\\n\\r\\nIn this live-coding session, we explore JDK 9-11 features enabling all the aspects of reactive programming - updates to the Stream and CompletableFuture APIs, Reactive Streams publish-subscribe framework, HTTP/2 client, and more.\"},\"fromTime\":\"17:40\",\"toTimeMillis\":1542303000000,\"toTime\":\"18:30\",\"roomCapacity\":694,\"roomName\":\"Room 8\",\"slotId\":\"conf_Room8_thursday_15_17h40_18h30\",\"day\":\"thursday\"}]}",
    "headers" : {
      "Content-Type" : "application/json; charset=utf-8",
      "Etag" : "v2-791456291764484823",
      "Links" : "<http://dvbe18.confinabox.com/api/profile/schedule>; rel=\"profile\"",
      "Vary" : "Accept-Encoding",
      "X-No-Access" : "no-origin",
      "Date" : "Wed, 15 May 2019 10:17:24 GMT"
    }
  },
  "uuid" : "c31454a4-cbd9-4753-878e-2fabb545ca95",
  "persistent" : true,
  "insertionIndex" : 22
}