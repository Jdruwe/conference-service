{
  "id" : "53e84663-d56a-424e-9e93-938fb8d4437f",
  "name" : "api_conferences_dvbe18_rooms_room5_wednesday",
  "request" : {
    "url" : "/api/conferences/dvbe18/rooms/Room5/wednesday",
    "method" : "GET"
  },
  "response" : {
    "status" : 200,
    "body" : "{\"slots\":[{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542184200000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Methodology & Culture\",\"talkType\":\"Keynote\",\"track\":\"Methodology & Culture.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>Welcome to the 17th edition of Devoxx Belgium. In this welcome presentation we'll highlight several applications we're using to run Devoxx Belgium.</p>\\n\",\"id\":\"BGE-3228\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/05b9d537f1895a60adc4dbc25b6af2d1ef458854\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Stephan Janssen\"},\"name\":\"Stephan Janssen\"}],\"title\":\"Welcome - Overflow\",\"lang\":\"en\",\"summary\":\"Welcome to the 17th edition of Devoxx Belgium. In this welcome presentation we'll highlight several applications we're using to run Devoxx Belgium.\"},\"fromTime\":\"09:30\",\"toTimeMillis\":1542186000000,\"toTime\":\"10:00\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"key_Room5_wednesday_14_9h30_10h0\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542186000000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Java Language\",\"talkType\":\"Keynote\",\"track\":\"Java Language.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>In the past year, we changed Java in three ways that we never have before: We modularized the platform, we removed some components, and we accelerated the pace of new releases. These changes aim to keep Java vibrant in an ever-changing world of competing platforms and new styles of application deployment, whether to the cloud or to app stores. They are disruptive, but they’re not as scary as you may think, and many developers have already adjusted to them.</p>\\n\",\"id\":\"VOS-4455\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/bd2f55b11bacf7aa2791921b48dd589c3567bc81\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Mark Reinhold\"},\"name\":\"Mark Reinhold\"}],\"title\":\"Java in 2018: Change is the Only Constant - Overflow\",\"lang\":\"en\",\"summary\":\"In the past year, we changed Java in three ways that we never have before: We modularized the platform, we removed some components, and we accelerated the pace of new releases. These changes aim to keep Java vibrant in an ever-changing world of competing platforms and new styles of application deployment, whether to the cloud or to app stores. They are disruptive, but they’re not as scary as you may think, and many developers have already adjusted to them.\"},\"fromTime\":\"10:00\",\"toTimeMillis\":1542187800000,\"toTime\":\"10:30\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"key_Room5_wednesday_14_10h0_10h30\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542187800000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Programming languages\",\"talkType\":\"Keynote\",\"track\":\"Programming languages.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>We've, as humans, been programming only for the past few decades. We've come a long way in some ways, yet we've advanced only marginally on other fronts. We hear folks tell us, 'oh, things change so fast' and yet we've changed only a little in the way we develop software. Imagine where we'd be, if only von Newman had not put that bottleneck in computing... It takes a long time for the software developers to change. The last big changed happened about 20 years ago. We're poised for the next big change. In this presentation we'll learn about the perfect storms that's influencing that change and the directions that the programming field is evolving in.</p>\\n\",\"id\":\"ZRG-7073\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/af8a385bb3e6caef5337c94d51e0999994e120e5\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Venkat Subramaniam\"},\"name\":\"Venkat Subramaniam\"}],\"title\":\"Spearheading the future of programming - Overflow\",\"lang\":\"en\",\"summary\":\"We've, as humans, been programming only for the past few decades. We've come a long way in some ways, yet we've advanced only marginally on other fronts. We hear folks tell us, 'oh, things change so fast' and yet we've changed only a little in the way we develop software. Imagine where we'd be, if only von Newman had not put that bottleneck in computing... It takes a long time for the software developers to change. The last big changed happened about 20 years ago. We're poised for the next big change. In this presentation we'll learn about the perfect storms that's influencing that change and the directions that the programming field is evolving in.\"},\"fromTime\":\"10:30\",\"toTimeMillis\":1542191400000,\"toTime\":\"11:30\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"key_Room5_wednesday_14_10h30_11h30\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542193200000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Architecture & Security\",\"talkType\":\"Conference\",\"track\":\"Architecture & Security.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>Building a flexible, scalable, real-time data architecture for the enterprise is no simple matter. Rarely does one single technology suit for all requirements, and frequently many different teams are involved which drives solutions with varying levels of [dis-]integration.</p>\\n<p>Apache Kafka is a streaming platform that acts as the 'data backbone' for the enterprise. By streaming events into Kafka as they occur, they can be used in any dependent system, in real time or batch. Search replicas, NoSQL stores, caches, graph databases - these all have their place in solving specific requirements, and all need to be fed with data! Kafka is the enabling platform that supports the event-driven, high performance, scalable integration of data throughout the enterprise, whilst also providing the messaging capabilities to drive applications directly.</p>\\n<p>This talk will discuss the role and benefits of Kafka in an architecture, the Kafka ecosystem, and several design patterns used to address specific challenges that organisations face with managing their flows and availability of data.</p>\\n\",\"id\":\"SAN-6621\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/813877751b36813246ddf5336298adb8047ead5d\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Robin Moffatt\"},\"name\":\"Robin Moffatt\"}],\"title\":\"Embrace the Anarchy : Apache Kafka’s Role in Modern Data Architectures\",\"lang\":\"en\",\"summary\":\"Building a flexible, scalable, real-time data architecture for the enterprise is no simple matter. Rarely does one single technology suit for all requirements, and frequently many different teams are involved which drives solutions with varying levels of [dis-]integration.\\r\\n\\r\\nApache Kafka is a streaming platform that acts as the 'data backbone' for the enterprise. By streaming events into Kafka as they occur, they can be used in any dependent system, in real time or batch. Search replicas, NoSQL stores, caches, graph databases - these all have their place in solving specific requirements, and all need to be fed with data! Kafka is the enabling platform that supports the event-driven, high performance, scalable integration of data throughout the enterprise, whilst also providing the messaging capabilities to drive applications directly.\\r\\n\\r\\nThis talk will discuss the role and benefits of Kafka in an architecture, the Kafka ecosystem, and several design patterns used to address specific challenges that organisations face with managing their flows and availability of data.\"},\"fromTime\":\"12:00\",\"toTimeMillis\":1542196200000,\"toTime\":\"12:50\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"conf_Room5_wednesday_14_12h0_12h50\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542197100000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Server Side Java\",\"talkType\":\"Quickie\",\"track\":\"Server Side Java.label\",\"audienceLevel\":\"l2\",\"summaryAsHtml\":\"<p>The Spring Framework originated from a book in 2002, becoming the most widely used application framework in the entire Java ecosystem within a few years... and holding that position to this day. This talk illustrates Spring's evolution over 15 years, adapting not only to five new JDK generations but also to ever-changing requirements in modern enterprise architectures.</p>\\n\",\"id\":\"LND-1450\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/683566fa384c408462fd6d187a442889ecddccd5\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Juergen Hoeller\"},\"name\":\"Juergen Hoeller\"}],\"title\":\"15 Years of Spring (in 15 Minutes)\",\"lang\":\"en\",\"summary\":\"The Spring Framework originated from a book in 2002, becoming the most widely used application framework in the entire Java ecosystem within a few years... and holding that position to this day. This talk illustrates Spring's evolution over 15 years, adapting not only to five new JDK generations but also to ever-changing requirements in modern enterprise architectures.\"},\"fromTime\":\"13:05\",\"toTimeMillis\":1542198000000,\"toTime\":\"13:20\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"quick_Room5_wednesday_14_13h5_13h20\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542198600000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Methodology & Culture\",\"talkType\":\"Quickie\",\"track\":\"Methodology & Culture.label\",\"audienceLevel\":\"l2\",\"summaryAsHtml\":\"<p>by automating the versioning of your project using <a href=\\\"https://github.com/jgitver/jgitver\\\">jgitver</a> you can gain:<br  /></p>\\n<ul>\\n<li>automatic versioning from git history</li>\\n<li>clean history with no unnecessary commit (zero <em>pom.xml</em> or <em>build.gradle</em> modifications for changing project version)</li>\\n<li>explicit versioning in branches</li>\\n<li>compatibility with CI environments</li>\\n</ul>\\n<p>say <em>'bye-bye'</em> to maven-release and the like and just keep things as simple as <code>tag &amp; deploy</code></p>\\n<p>Use now <a href=\\\"https://github.com/jgitver/jgitver\\\">jgitver</a> integrated to your build using the <a href=\\\"https://github.com/jgitver/jgitver-maven-plugin\\\">maven</a> or <a href=\\\"https://github.com/jgitver/gradle-jgitver-plugin\\\">gradle</a> plugin.</p>\\n\",\"id\":\"DBF-1594\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/3f32ed33ec789dde464df47ea47240156e4d776d\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Matthieu Brouillard\"},\"name\":\"Matthieu Brouillard\"}],\"title\":\"project versioning like a git\",\"lang\":\"en\",\"summary\":\"by automating the versioning of your project using [jgitver](https://github.com/jgitver/jgitver) you can gain:  \\r\\n\\r\\n- automatic versioning from git history\\r\\n- clean history with no unnecessary commit (zero _pom.xml_ or _build.gradle_ modifications for changing project version)\\r\\n- explicit versioning in branches\\r\\n- compatibility with CI environments\\r\\n\\r\\nsay _'bye-bye'_ to maven-release and the like and just keep things as simple as `tag & deploy`\\r\\n\\r\\nUse now [jgitver](https://github.com/jgitver/jgitver) integrated to your build using the [maven](https://github.com/jgitver/jgitver-maven-plugin) or [gradle](https://github.com/jgitver/gradle-jgitver-plugin) plugin.\"},\"fromTime\":\"13:30\",\"toTimeMillis\":1542199500000,\"toTime\":\"13:45\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"quick_Room5_wednesday_14_13h30_13h45\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542200400000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Programming languages\",\"talkType\":\"Conference\",\"track\":\"Programming languages.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>IntelliJ IDEA is designed to help developers to be really productive.  It aims to help you \\\"stay in the flow\\\", to automatically do as much as possible while also staying out of your way.  To learn how to make the most of this, sometimes we need to see how others use the tool to understand what is possible and how it helps.</p>\\n<p>In this session, Trisha will demonstrate how key features of IntelliJ IDEA help you to develop code more effectively.  We'll look at some simple navigation tricks to help us to get around the IDE faster; we'll use code generation and live templates to create code more easily; we'll see how inspections and intentions, refactoring and code analysis can help to improve the code we've written; and we'll step through some testing and debugging scenarios to understand how these tools help us to create quality code.</p>\\n\",\"id\":\"RUG-3889\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/e0dfdaf80ce2454c3aec8a22cb16cae3f5b8a69c\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Trisha Gee\"},\"name\":\"Trisha Gee\"}],\"title\":\"Be More Productive With IntelliJ IDEA\",\"lang\":\"en\",\"summary\":\"IntelliJ IDEA is designed to help developers to be really productive.  It aims to help you \\\"stay in the flow\\\", to automatically do as much as possible while also staying out of your way.  To learn how to make the most of this, sometimes we need to see how others use the tool to understand what is possible and how it helps.\\r\\n\\r\\nIn this session, Trisha will demonstrate how key features of IntelliJ IDEA help you to develop code more effectively.  We'll look at some simple navigation tricks to help us to get around the IDE faster; we'll use code generation and live templates to create code more easily; we'll see how inspections and intentions, refactoring and code analysis can help to improve the code we've written; and we'll step through some testing and debugging scenarios to understand how these tools help us to create quality code.\"},\"fromTime\":\"14:00\",\"toTimeMillis\":1542203400000,\"toTime\":\"14:50\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"conf_Room5_wednesday_14_14h0_14h50\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542204600000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Architecture & Security\",\"talkType\":\"Conference\",\"track\":\"Architecture & Security.label\",\"audienceLevel\":\"l1\",\"summaryAsHtml\":\"<p>How to secure microservices? Eclipse MicroProfile JWT (https://microprofile.io/) is the answer. MicroProfile JWT designed a mechanism to propagate the security state from clients to services or event services to services by using security tokens. This session will give you a quick overview on the MicroProfile JWT design, followed by a live demo of microservices communication by passing on the JSON web token, running on Open Liberty (https://openliberty.io/). Come to this session to understand the technology and learn how to use it.</p>\\n\",\"id\":\"IUH-5593\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/b32e73d3b070f325d520e8908113abf600da0e0a\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Emily Jiang\"},\"name\":\"Emily Jiang\"}],\"title\":\"Secure microservices made easy with MicroProfile JWT\",\"lang\":\"en\",\"summary\":\"How to secure microservices? Eclipse MicroProfile JWT (https://microprofile.io/) is the answer. MicroProfile JWT designed a mechanism to propagate the security state from clients to services or event services to services by using security tokens. This session will give you a quick overview on the MicroProfile JWT design, followed by a live demo of microservices communication by passing on the JSON web token, running on Open Liberty (https://openliberty.io/). Come to this session to understand the technology and learn how to use it.\"},\"fromTime\":\"15:10\",\"toTimeMillis\":1542207600000,\"toTime\":\"16:00\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"conf_Room5_wednesday_14_15h10_16h0\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542210000000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Methodology & Culture\",\"talkType\":\"Conference\",\"track\":\"Methodology & Culture.label\",\"audienceLevel\":\"l2\",\"summaryAsHtml\":\"<p>Micro-services are the new black; everyone is using them. Alas, when your system is composed of many micro-services, testing becomes more challenging. The straight-forward approach for E2E testing no longer suffices and for integration tests it doesn’t even exist. A better way to test in this kind of an environment would be to work with a test kit of the micro-service you are interacting with.\\nBy the end of this talk, you will learn how to create a test-kit that covers your micro-service. Testing this way will grant you a much higher level of confidence, and will portray a more accurate picture of your assumptions vs. reality. Overall it will make any integration between micro-services easier, thus benefit your colleagues and make your company progress faster.</p>\\n\",\"id\":\"UNX-4400\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/90dd44bf81ebbf9f6181c7aab796f90f63738ff7\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Maxim Novak\"},\"name\":\"Maxim Novak\"}],\"title\":\"A Better Approach for Testing Micro-Services – Introducing: Test Kits in Practice\",\"lang\":\"en\",\"summary\":\"Micro-services are the new black; everyone is using them. Alas, when your system is composed of many micro-services, testing becomes more challenging. The straight-forward approach for E2E testing no longer suffices and for integration tests it doesn’t even exist. A better way to test in this kind of an environment would be to work with a test kit of the micro-service you are interacting with.\\r\\nBy the end of this talk, you will learn how to create a test-kit that covers your micro-service. Testing this way will grant you a much higher level of confidence, and will portray a more accurate picture of your assumptions vs. reality. Overall it will make any integration between micro-services easier, thus benefit your colleagues and make your company progress faster.\"},\"fromTime\":\"16:40\",\"toTimeMillis\":1542213000000,\"toTime\":\"17:30\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"conf_Room5_wednesday_14_16h40_17h30\",\"day\":\"wednesday\"},{\"roomId\":\"Room5\",\"notAllocated\":false,\"fromTimeMillis\":1542214200000,\"break\":null,\"roomSetup\":\"classroom\",\"talk\":{\"trackId\":\"Java Language\",\"talkType\":\"Conference\",\"track\":\"Java Language.label\",\"audienceLevel\":\"l2\",\"summaryAsHtml\":\"<p>Object Oriented Programming dominated the software development landscape in the last decade of XX century and in the first of XXI. In more recent years, even as a consequence of the advent of multicore CPUs, Functional Programming and its principles started attracting more interest, becoming at least equally relevant in our industry. The biggest mistake made by programmers nowadays is considering OOP and FP as two mutually exclusive paradigms. This misconception is also the product of a misunderstanding about what OOP actually means and its founding principles. The biggest pros of OOP are polymorphism and encapsulation while FP strengths are immutabilty and its declarative style, but these features are orthogonal and there's no reason why they cannot coexist in the same program. The final purpose of this talk is twofold: debunking the misconceptions on OOP and showing that OOP and FP are actually complementary techniques that can happily coexist in the same codebase. It is the duty of experienced developers to fill their toolbox with both OOP and FP tools and to know from time to time how to choose and employ the tool that is the best fit for the problem at hand.</p>\\n\",\"id\":\"DOW-5149\",\"speakers\":[{\"link\":{\"href\":\"http://dvbe18.confinabox.com/api/conferences/dvbe18/speakers/5b4010d412ffa7885671b06b60ff3e2c2aeb1022\",\"rel\":\"http://dvbe18.confinabox.com/api/profile/speaker\",\"title\":\"Mario Fusco\"},\"name\":\"Mario Fusco\"}],\"title\":\"OOP v̶s̶ and FP\",\"lang\":\"en\",\"summary\":\"Object Oriented Programming dominated the software development landscape in the last decade of XX century and in the first of XXI. In more recent years, even as a consequence of the advent of multicore CPUs, Functional Programming and its principles started attracting more interest, becoming at least equally relevant in our industry. The biggest mistake made by programmers nowadays is considering OOP and FP as two mutually exclusive paradigms. This misconception is also the product of a misunderstanding about what OOP actually means and its founding principles. The biggest pros of OOP are polymorphism and encapsulation while FP strengths are immutabilty and its declarative style, but these features are orthogonal and there's no reason why they cannot coexist in the same program. The final purpose of this talk is twofold: debunking the misconceptions on OOP and showing that OOP and FP are actually complementary techniques that can happily coexist in the same codebase. It is the duty of experienced developers to fill their toolbox with both OOP and FP tools and to know from time to time how to choose and employ the tool that is the best fit for the problem at hand.\"},\"fromTime\":\"17:50\",\"toTimeMillis\":1542217200000,\"toTime\":\"18:40\",\"roomCapacity\":649,\"roomName\":\"Room 5\",\"slotId\":\"conf_Room5_wednesday_14_17h50_18h40\",\"day\":\"wednesday\"}]}",
    "headers" : {
      "Content-Type" : "application/json; charset=utf-8",
      "Etag" : "v2-79145626-1731468034",
      "Links" : "<http://dvbe18.confinabox.com/api/profile/schedule>; rel=\"profile\"",
      "Vary" : "Accept-Encoding",
      "X-No-Access" : "no-origin",
      "Date" : "Wed, 15 May 2019 10:17:26 GMT"
    }
  },
  "uuid" : "53e84663-d56a-424e-9e93-938fb8d4437f",
  "persistent" : true,
  "insertionIndex" : 48
}