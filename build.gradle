buildscript {
    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "http://dl.bintray.com/typesafe/maven-releases" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
        classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "pmd"
    apply plugin: "checkstyle"
    apply plugin: "jacoco"
    apply plugin: "checkstyle"

    group = "be.xplore"
    version = "0.0.1"
    sourceCompatibility = 11
    targetCompatibility = 11

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    configurations { codacy }

    checkstyle {
        toolVersion = "8.18"
        configFile = file("config/checkstyle/checkstyle.xml")
    }

    pmd {
        ruleSets = []
        ruleSetFiles = files("config/pmd/ruleset.xml")
    }

    jacoco {
        toolVersion = "0.8.3"
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }

    task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
        main = "com.codacy.CodacyCoverageReporter"
        classpath = configurations.codacy
        args = [
                "report",
                "-l",
                "Java",
                "-r",
                "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        ]
    }

    test.finalizedBy jacocoTestReport
    jacocoTestReport.finalizedBy sendCoverageToCodacy
}

project(":domain") {
}


project("rest-api") {
    dependencies {
        compile project(":domain")
    }
}

project("persistence") {
    dependencies {
        compile project(":domain")
    }
}

project("consumer") {
    dependencies {
        compile project(":domain")
        compile project(":persistence")
    }
}

project("springboot-deployment") {
    apply plugin: "org.springframework.boot"

    dependencies {
        compile project(":domain")
        compile project(":consumer")
        compile project(":rest-api")
        compile project(":persistence")

        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"

        codacy "com.github.codacy:codacy-coverage-reporter:-SNAPSHOT"

        testImplementation "org.springframework.boot:spring-boot-starter-test"
        testCompile(group: "org.springframework.security", name: "spring-security-test", version: "5.1.1.RELEASE")

        compile "org.mock-server:mockserver-netty:5.5.1"
        testCompile "com.github.tomakehurst:wiremock:2.23.2"

        runtimeOnly "org.springframework.boot:spring-boot-devtools"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        implementation "org.springframework.boot:spring-boot-starter"
        implementation "org.springframework.boot:spring-boot-starter-actuator"

        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-security"

        compile("org.springframework.cloud:spring-cloud-security:1.1.3.RELEASE")
        compile("org.springframework.security.oauth:spring-security-oauth2:2.0.11.RELEASE")
        compile group: "io.jsonwebtoken", name: "jjwt", version: "0.9.0"

        compile "org.modelmapper.extensions:modelmapper-spring:2.3.0"
        compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.9.8"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

        compile("org.springframework.boot:spring-boot-starter-mail")
        compile "org.springframework:spring-context-support:3.0.5.RELEASE"

        implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        runtimeOnly("com.h2database:h2")
    }
}
