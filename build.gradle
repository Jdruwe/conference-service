plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'jacoco'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'

group = 'be.xplore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "http://dl.bintray.com/typesafe/maven-releases" }
}

configurations { codacy }

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compile("org.springframework.cloud:spring-cloud-security:1.1.3.RELEASE")
    compile("org.springframework.security.oauth:spring-security-oauth2:2.0.11.RELEASE")
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'

    compile 'org.modelmapper.extensions:modelmapper-spring:2.3.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    compile("org.springframework.boot:spring-boot-starter-mail")
    compile "org.springframework:spring-context-support:3.0.5.RELEASE"
    
    runtimeOnly('com.h2database:h2')
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    codacy 'com.github.codacy:codacy-coverage-reporter:-SNAPSHOT'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile(group: 'org.springframework.security', name: 'spring-security-test', version: '5.1.1.RELEASE')
    
    compile "org.mock-server:mockserver-netty:5.5.1"
}

pmd {
    ruleSets = []
    ruleSetFiles = files('./pmd.xml')
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
    main = "com.codacy.CodacyCoverageReporter"
    classpath = configurations.codacy
    args = [
            "report",
            "-l",
            "Java",
            "-r",
            "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    ]
}

test.finalizedBy jacocoTestReport
jacocoTestReport.finalizedBy sendCoverageToCodacy
